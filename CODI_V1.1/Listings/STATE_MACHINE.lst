C51 COMPILER V9.59.0.0   STATE_MACHINE                                                     06/14/2025 13:11:06 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE STATE_MACHINE
OBJECT MODULE PLACED IN .\Objects\STATE_MACHINE.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE STATE_MACHINE.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\STATE_MACHINE.lst) TABS(2) OBJECT(.\Objects\STATE_MACHINE.obj)

line level    source

   1          #include "STATE_MACHINE.h"
   2          #include "lcd.h"
   3          #include "BOTONS_RELES.h"
   4          #include "MCP3302.h"
   5          
   6          unsigned char PANTALLA = 0;
   7          unsigned char desenes = 0;
   8          unsigned char unitats = 0;
   9          unsigned char decimal = 0;
  10          unsigned int temperature_C = 0;
  11          
  12          //MENU
  13          unsigned char code linea1[16] = {'M','E','N','U',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
  14          unsigned char code linea2[16] = {'<','-',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','-','>'};
  15          
  16          //TEMPERATURE SCREEN
  17          unsigned int temperatura_actual = 245;
  18          unsigned int temperatura_max = 320;
  19          unsigned char code linea3[16] = {'T','E','M','P',':',' ',' ',' ','M','A','X','.','T',':',' ',' '};
  20          unsigned char linea4[16] =      {' ',' ','.',' ','C',' ',' ',' ',' ',' ','.',' ','C',' ',' ',' '};
  21          
  22          //HUMIDITY SCREEN
  23          unsigned int humitat_actual = 245;
  24          unsigned int humitat_min = 320;
  25          unsigned char code linea5[16] = {'H','U','M',':',' ',' ',' ',' ','M','I','N','.','H',':',' ',' '};
  26          unsigned char linea6[16] =      {' ',' ','.',' ','%',' ',' ',' ',' ',' ','.',' ','%',' ',' ',' '};
  27          
  28          //MOTOR SCREEN
  29          unsigned char motor_mode = 0;
  30          unsigned char code linea7[16] = {'M','O','T','O','R',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
  31          unsigned char linea8[16] =      {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
  32          
  33          //VENTILATOR SCREEN
  34          unsigned char ventilator_mode = 0;
  35          unsigned char code linea9[16] = {'V','E','N','T','I','L','A','D','O','R',' ',' ',' ',' ',' ',' '};
  36          unsigned char linea10[16] =     {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
  37          
  38          float fast_log(float x) {
  39   1          float y;
  40   1          float y2;
  41   1          if (x <= 0.01) return -5.0;  // evitar inestabilitats extremes
  42   1          y = (x - 1) / (x + 1);
  43   1          y2 = y * y;
  44   1          return 2 * y * (1 + y2 / 3);
  45   1      }
  46          
  47          unsigned int calcular_temperatura(unsigned int adc12) {
  48   1          float voltatge = MCP3302_ToVoltage(adc12, 5.1);
  49   1          float r_ntc = (voltatge * 10000.0) / (5.1 - voltatge);
  50   1          float ln_ratio = fast_log(r_ntc / 10000.0);
  51   1          float temp_K = 1.0 / ((1.0 / 298.15) + (1.0 / 3984.0) * ln_ratio);
  52   1          return (unsigned int)((temp_K - 273.15) * 10);
  53   1      }
  54          
C51 COMPILER V9.59.0.0   STATE_MACHINE                                                     06/14/2025 13:11:06 PAGE 2   

  55          void dividir_valor(unsigned int valor){
  56   1          desenes = valor/100;
  57   1          unitats = (valor/10)%10;
  58   1          decimal = valor%10;
  59   1      }
  60          
  61          void control_temp(void){
  62   1        if(B_RIGHT == 0){
  63   2          temperatura_max++;
  64   2        }else if(B_LEFT == 0){
  65   2          temperatura_max--;
  66   2        }
  67   1      }
  68          
  69          void control_hum(void){
  70   1        if(B_RIGHT == 0){
  71   2          humitat_min++;
  72   2        }else if(B_LEFT == 0){
  73   2          humitat_min--;
  74   2        }
  75   1      }
  76          
  77          void control_vent(void){
  78   1        if(B_OK == 0){
  79   2          ventilator_mode++;
  80   2        }
  81   1        if(ventilator_mode == 4){
  82   2          ventilator_mode = 0;
  83   2        }
  84   1      }
  85          
  86          void control_motor(void){
  87   1        if(B_OK == 0){
  88   2          motor_mode++;
  89   2        }
  90   1        if(motor_mode == 4){
  91   2          motor_mode = 0;
  92   2        }
  93   1      }
  94          
  95          void state_machine(unsigned int lectura){
  96   1          if(B_DOWN == 0){
  97   2            PANTALLA++;
  98   2            if(PANTALLA == 5){
  99   3              PANTALLA = main_screen;
 100   3            }
 101   2            delay(200);
 102   2          }else if(B_UP == 0){
 103   2            PANTALLA--;
 104   2            if(PANTALLA == 255){
 105   3              PANTALLA = ventilator_screen;
 106   3            }
 107   2            delay(200);
 108   2          }
 109   1          
 110   1          if(PANTALLA == main_screen){
 111   2            LCD_BEGIN(linea1, linea2);
 112   2          }
 113   1          else if(PANTALLA == temp_screen){
 114   2            control_temp();
 115   2            temperature_C = calcular_temperatura(lectura);
 116   2            dividir_valor(temperature_C);
C51 COMPILER V9.59.0.0   STATE_MACHINE                                                     06/14/2025 13:11:06 PAGE 3   

 117   2      
 118   2            linea4[0] = desenes+0x30;
 119   2            linea4[1] = unitats+0x30;
 120   2            linea4[3] = decimal+0x30;
 121   2            dividir_valor(temperatura_max);
 122   2            linea4[8] = desenes+0x30;
 123   2            linea4[9] = unitats+0x30;
 124   2            linea4[11] = decimal+0x30;
 125   2            LCD_BEGIN(linea3, linea4);
 126   2          }
 127   1          else if(PANTALLA == hum_screen){
 128   2            control_hum();
 129   2            dividir_valor(humitat_actual);
 130   2            linea6[0] = desenes+0x30;
 131   2            linea6[1] = unitats+0x30;
 132   2            linea6[3] = decimal+0x30;
 133   2            dividir_valor(humitat_min);
 134   2            linea6[8] = desenes+0x30;
 135   2            linea6[9] = unitats+0x30;
 136   2            linea6[11] = decimal+0x30;
 137   2            LCD_BEGIN(linea5, linea6);
 138   2          }
 139   1          else if(PANTALLA == motor_screen){
 140   2            control_motor();
 141   2            if(motor_mode == 0){
 142   3              linea8[0] = 'O';
 143   3              linea8[1] = 'F';
 144   3              linea8[2] = 'F';
 145   3              linea8[3] = ' ';
 146   3              LCD_BEGIN(linea7, linea8);
 147   3              control_porta(0);
 148   3            }else if(motor_mode == 1){
 149   3              linea8[0] = 'U';
 150   3              linea8[1] = 'P';
 151   3              linea8[2] = ' ';
 152   3              linea8[3] = ' ';
 153   3              LCD_BEGIN(linea7, linea8);
 154   3              control_porta(1);
 155   3              motor_mode = 0;
 156   3            }else if(motor_mode == 2){
 157   3              linea8[0] = 'D';
 158   3              linea8[1] = 'O';
 159   3              linea8[2] = 'W';
 160   3              linea8[3] = 'N';
 161   3              LCD_BEGIN(linea7, linea8);
 162   3              control_porta(2);
 163   3              motor_mode = 0;
 164   3            }
 165   2            else if(motor_mode == 3){
 166   3              linea8[0] = 'A';
 167   3              linea8[1] = 'U';
 168   3              linea8[2] = 'T';
 169   3              linea8[3] = 'O';
 170   3              LCD_BEGIN(linea7, linea8);
 171   3            }
 172   2          }
 173   1          else if(PANTALLA == ventilator_screen){
 174   2            control_vent();
 175   2            if(ventilator_mode == 0){
 176   3              linea10[1] = 'O';
 177   3              linea10[2] = 'F';
 178   3              linea10[3] = 'F';
C51 COMPILER V9.59.0.0   STATE_MACHINE                                                     06/14/2025 13:11:06 PAGE 4   

 179   3            }else if(ventilator_mode == 1){
 180   3              linea10[1] = 'O';
 181   3              linea10[2] = 'N';
 182   3              linea10[3] = ' ';
 183   3            }else if(ventilator_mode == 2){
 184   3              linea10[1] = 'A';
 185   3              linea10[2] = 'U';
 186   3              linea10[3] = 'T';
 187   3            }
 188   2            LCD_BEGIN(linea9, linea10);
 189   2          }
 190   1          delay(10);
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    960    ----
   CONSTANT SIZE    =     96    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     80      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
