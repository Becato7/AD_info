C51 COMPILER V9.59.0.0   LTC                                                               05/25/2025 20:20:21 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LTC
OBJECT MODULE PLACED IN .\Objects\LTC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LTC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LTC.l
                    -st) TABS(2) OBJECT(.\Objects\LTC.obj)

line level    source

   1          
   2          
   3          
   4          #include "LTC.h"
   5          
   6          // --------------------
   7          // Inicialització SPI hardware
   8          // --------------------
   9          /*
  10          | Bit | Nom          | Valor | Significat                                  |
  11          | --- | ------------ | ----- | ------------------------------------------- |
  12          | 7   | WCOL         | 0     | No col·lisió d’escriptura                   |
  13          | 6   | SPEN         | 1     | SPI **habilitat** (es fa també a sota)      |
  14          | 5   | MSTR         | 1     | SPI en **mode master**                      |
  15          | 4   | CPOL         | 1     | Clock Polarity: **idle = alt**              |
  16          | 3   | CPHA         | 0     | Clock Phase: mostra dades a primer flanc    |
  17          | 2   | SPR1         | 0     | Velocitat: (SPR1\:SPR0) = `00` ? **Fosc/4** |
  18          | 1   | SPR0         | 0     | idem                                        |
  19          | 0   | bit reservat | 0     | No s’utilitza                               |
  20          */
  21          void SPI_Init(void) {
  22   1        SPCON = 0x50;     // Master mode, CPOL=0, CPHA=0, Fosc/4
  23   1        SPCON |= 0x10;    // SPI Enable
  24   1      }
  25          
  26          // --------------------
  27          // Envia i rep 1 byte SPI
  28          // --------------------
  29          unsigned char SPI_Transfer(unsigned char value) {
  30   1        SPDAT = value;
  31   1        while (!(SPSTA & 0x80));  // Espera a que SPIF = 1
  32   1        return SPDAT;
  33   1      }
  34          
  35          // --------------------
  36          // Llegeix un canal del LTC1296
  37          // --------------------
  38          /*
  39          | Canal | Codi binari | Hex    |
  40          | ----- | ----------- | ------ |
  41          | CH0   | `11000111`  | `0xC7` |
  42          | CH1   | `11100111`  | `0xE7` |
  43          | CH2   | `11001111`  | `0xCF` |
  44          | CH3   | `11101111`  | `0xEF` |
  45          | CH4   | `11010111`  | `0xD7` |
  46          | CH5   | `11110111`  | `0xF7` |
  47          | CH6   | `11011111`  | `0xDF` |
  48          | CH7   | `11111111`  | `0xFF` |*/
  49          unsigned int LTC_ReadChannel(unsigned char command) {
  50   1        unsigned char msb, lsb;
  51   1        unsigned int result;
  52   1      
  53   1        SPI_CS = 0;                // Activa el xip
  54   1        SPI_Transfer(command);     // Envia la comanda (ex: 0xC7 per canal 0)
C51 COMPILER V9.59.0.0   LTC                                                               05/25/2025 20:20:21 PAGE 2   

  55   1        msb = SPI_Transfer(0x00);  // Llegeix primer byte
  56   1        lsb = SPI_Transfer(0x00);  // Llegeix segon byte
  57   1        SPI_CS = 1;                // Desactiva el xip
  58   1      
  59   1        result = ((msb << 8) | lsb) >> 3;  // Només els 12 bits útils
  60   1        return result;
  61   1      }
  62          
  63          float convert_to_voltage(unsigned int adc_value) {
  64   1          return (5.0 * adc_value) / 4096.0;
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     74    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
